#include <stdio.h>
struct process{
   int pid,bt,wt,tat;
   }p[20],temp;
void main(){
 int i,j,ttat,twt,n,min;
 printf("enter the number of process");
 scanf("%d",&n);
 printf("enter the burst time of process");
 for(i=1;i<=n;i++){
  p[i].pid=i;
  printf("p[%d]",i);
  scanf("%d",p[i].bt);
 }
 for(i=1;i<n;i++){
 min=i;
  for(j=i+1;j<=n;j++){
   if(p[j].bt<p[min].bt){
     min=j;
     if(min!=i){
      temp.pid=p[i].pid;
      temp.bt=p[i].bt;
      p[i].pid=p[min].pid;
      p[i].bt=p[min].bt;
      p[min].pid=temp.pid;
      p[min].bt=temp.bt;
    }
  }
 }
 p[i].wt=twt=ttat=0;
 for(i=1;i<=n;i++){
 p[i].tat=p[i+1].wt=p[i].wt+p[i].bt;
 twt+=p[i].wt;
 ttat+=p[i].tat;
 }
 for(i=1;i<n;i++)
   min=i;
    for(j=i+1;j<=n;j++){
   if(p[j].pid<p[min].pid){
     min=j;
     if(min!=i){
      temp.pid=p[i].pid;
      temp.bt=p[i].bt;
      temp.wt=p[i].wt;
      temp.tat=p[i].tat;
      p[i].pid=p[min].pid;
      p[i].bt=p[min].bt;
      p[i].wt=p[min].wt;
      p[i].tat=p[min].tat;
      p[min].pid=temp.pid;
      p[min].bt=temp.bt;
      p[min].wt=temp.wt;
      p[min].tat=temp.tat;
      }
      }
      }
 printf("\nProcess\t\tBursttime\t\twaitingtime\t\tTurnaroundtime\n");
        for(i=0;i<n;i++){
                printf("\np[%d]\t\t\t%d\t\t\t%d\t\t\t%d\n",p[i].pid,p[i].bt,p[i].wt,p[i].tat);
        }
        printf("Average waiting time:%f\n",(float)twt/n);
        printf("Average turnaround time:%f\n",(float)ttat/n);
}
